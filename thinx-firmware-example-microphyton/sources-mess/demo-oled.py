import ssd1306
import utime
from machine import I2C, Pin

def draw_line(display, x0, y0, x1, y1):
    deltax = x1 - x0
    deltay = y1 - y0
    error = -1.0
    deltaerr = abs(deltay / deltax)  # Assume deltax != 0 (line is not vertical),
        # note that this division needs to be done in a way that preserves the fractional part
    y = y0
    for x in range(int(x0), int(x1)-1):
        # plot(x,y)
        display.pixel(x, y, 1)
        # print(x, y)
        error = error + deltaerr
        if error >= 0.0:
            y = y + 1
            error = error - 1.0

def draw_circle(display, x0, y0, radius):
    x = radius
    y = 0
    err = 0

    while x >= y:
        display.pixel(x0 + x, y0 + y, 1)
        display.pixel(x0 + y, y0 + x, 1)
        display.pixel(x0 - y, y0 + x, 1)
        display.pixel(x0 - x, y0 + y, 1)
        display.pixel(x0 - x, y0 - y, 1)
        display.pixel(x0 - y, y0 - x, 1)
        display.pixel(x0 + y, y0 - x, 1)
        display.pixel(x0 + x, y0 - y, 1)

        y += 1
        err += 1 + 2*y
        if 2*(err-x) + 1 > 0:
            x -= 1
            err += 1 - 2*x
            
i2c = I2C(sda=Pin(4), scl=Pin(5))
print("I2C scan: ", i2c.scan())
display = ssd1306.SSD1306_I2C(64, 48, i2c)


display.fill(0)

display.text('Hello',10,10)
display.show()
utime.sleep(1)
display.text('World',10,20)
display.show()
utime.sleep(1)
display.pixel(63, 47, 1)
display.show()
draw_line(display,1,2,40,11)
display.show()

utime.sleep(1)

display.fill(0)
for r in range(10):
    draw_circle(display, 20, 20 , r*2)
display.show()

pic=[
'0000000000000000000000000000000000000000000000000000000000000000',
'0000000000000000000000000000000000000000000000000000000000000000',
'0000000000000000000000000000000000000000000000000000000000000000',
'0000000000000000000000000000000000000000000000000000000000000000',
'0000000000000000000000000000000000000000000000000000000000000000',
'0000000000000000000001111111111111111111110000000000000000000000',
'0000000000000000000001111111111111111111111100000000000000000000',
'0000000000000000000001111111111111111111111111000000000000000000',
'0000000000000000000011111111111111111111111111100000000000000000',
'0000000000000000000011111111111111111111111111110000000000000000',
'0000000000000000000011111111111111111111111111110000000000000000',
'0000000000000000000011111100000000000000111111111000000000000000',
'0000000000000000000011111100000000000000001111111000000000000000',
'0000000000000000000011111000001111110000001111111000000000000000',
'0000000000000000000111111000010000011000000111111000000000000000',
'0000000000000000000111111000101000101100001111111000000000000000',
'0000000000000000000111111001001000100100001111111000000000000000',
'0000000000000000000111111001001000100100001111110000000000000000',
'0000000000000000001111111001000111100100001111110000000000000000',
'0000000000000000001111110001000000100100011111110000000000000000',
'0000000000000000001111110000100000101100111111110000000000000000',
'0000000000000000001111110000011000011001111111100000000000000000',
'0000000000000000001111110000001111110001111111100000000000000000',
'0000000000000000001111110000000000000111111110000000000000000000',
'0000000000000000001111110000000000001111111110000000000000000000',
'0000000000000000001111110000000000011111111000000000000000000000',
'0000000000000000011111100000000001111111111000000000000000000000',
'0000000000000000011111100000000011111111100000000000000000000000',
'0000000000000000011111100000000011111111100000000000000000000000',
'0000000000000000011111100000001111111110000000000000000000000000',
'0000000000000000011111100000001111111100000000000000000000000000',
'0000000000000000111111000000111111111000000000000000000000000000',
'0000000000000000111111000000111111110000000000000000000000000000',
'0000000000000000111111000001111111100000000000000000000000000000',
'0000000000000000111111000011111111000000000000000000000000000000',
'0000000000000001111110000011111110000001111110000000000000000000',
'0000000000000001111110000111111100000001111110000000000000000000',
'0000000000000001111110000111111100000001111110000000000000000000',
'0000000000000001111110000111111111111111111110000000000000000000',
'0000000000000001111110000111111111111111111110000000000000000000',
'0000000000000001111110001111111111111111111110000000000000000000',
'0000000000000011111110001111111111111111111100000000000000000000',
'0000000000000011111100001111111111111111111100000000000000000000',
'0000000000000011111100001111111111111111111100000000000000000000',
'0000000000000000000000000000000000000000000000000000000000000000',
'0000000000000000000000000000000000000000000000000000000000000000',
'0000000000000000000000000000000000000000000000000000000000000000',
'0000000000000000000000000000000000000000000000000000000000000000'
]

for x, row in enumerate(pic):
    for y, col in enumerate(row):
        if col == "1":
            display.pixel(x, y, 1)

display.show()

utime.sleep(10)
display.fill(0)
display.show()
